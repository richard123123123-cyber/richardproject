Class 1 (July 4th):
- Set up the environment to do website development
- Using a Mac as the operating system
- Installed Homebrew for package management
- Install Git via Homebrew
- Git is used for version control
- Install VSCode as the Integrated Development Environment (IDE) - this is where you code
- Introduced very basic terminal commands
- `ls`
- `cd`
- `mkdir`, `mv`, `rmdir`
- Introduced the basic structure of HTML, and how to use HTML tags


Class 2 (July 15th):
- Basic git commands and what GIT actually is
- When you are collaborating on a project, there are many people working together.
- your computer (local), github (remote)
- When you want to put you changed files from local to remote, you do:
    - 1) add the files `git add .`
    - 2) commit the files, and type in a message describing the change `git commit -m "..."`
    - 3) push the commit `git push`
- When you want to get what in remote to local, you do:
    - `git pull`
- Learned about what is a sitemap, and how to design a website
- Left some time to actually code the pages needed via HTML

Class 3 (July 18th):
- HTML Boilerplate
    - <!DOCTYPE html>: tells the browser what version of HTML to use (HTML5)
    - <html>: indicates that the file is HTML
    - <head>: metadata (meta information)
        - <meta>: defines the character set encoding (UTF-8)
        - <title>: title of your website
- <body>: the actual content of your website
    - there are various text-related tags you can use
    - headers <h1>, <h2>, <h3>, <h4>, <h5>, <h6>
    - paragraphs <p>
    - <strong> (bold text), <em> (italic text)

Class 4 (July 22th):
    - seperation of HTML and CSS 
    - HTML defines the content of a webpage
    - CSS is used style a webpage
    - CSS (Cascading Style Sheets)
    - the basic syntax of CSS:
        - selector {property: value}
        - type (element) selectors selects an entire element in HTML and styles it
        - for example, if you want to change all the Heading 1:
        - h1 {property: value}
        - class selector selects all items in HTML that is defined to be in that class
        - for example, you can make your own class called "red-text"
        - .red-text {property: value}
        - Then, in the HTML tag, you need to give it an attribute `class = "red-text`

Class 5 (July 24th):
    - More CSS selectors
        - type (element) selector
        - class selector: .
        - universal selector: *
        - id selector: #
    - Basics of Flexbox
        - flexbox is used for layout
        - Frequently used tag for containers <div> </div>
    - How to use developer tools in a browser to look at HTML and CSS of any website

Class 6 (July 29th):
    - Flexbox concepts: there is a container, and there are elements within the container
    - On the container, write the CSS rule {display: flex;}
    - Important properties that you should know:
        - 'flex-direction': how things line up (left to right, right to left, top to bottom, bottom to top)
            - row, row-reverse, column, column-reverse
        - 'justify-content': 
            - flex-start, flex-end, center, space-between, space-around, space-evenly
    - Control whitespace using padding and margin
        - If you don't want default spacing, use {padding: 0}, {margin: 0}
    - Some other CSS rules you used: border, background-color

Class 7 (July 31th):